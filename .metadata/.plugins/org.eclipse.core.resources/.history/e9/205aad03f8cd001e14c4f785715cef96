package com.app.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.apache.commons.io.FileUtils;
import org.springframework.web.multipart.MultipartFile;

import com.app.dto.ApiResponseDTO;
import com.app.entities.Song;
import com.app.exception.ApiException;
import com.app.exception.ResourceNotFoundException;

public class AdminServiceImpl implements AdminService {

	@Override
	public ApiResponseDTO uploadSongToFolderPathToDB(Long songId, MultipartFile song) throws IOException {
		Song songObj = songDao.findById(songId).orElseThrow(() -> new ResourceNotFoundException("Invalid song ID"));

		String path = folderLocation.concat(song.getOriginalFilename());

		System.out.println("path while uploading to folder: "+path);

		FileUtils.writeByteArrayToFile(new File(path), song.getBytes());

		songObj.setSongPath(path);

		return new ApiResponseDTO("song uploaded successfully" + songId);
	}

	@Override
	public byte[] downloadSong(Long songId) throws IOException {
		// get song id
				Song song = songDao.findById(songId).orElseThrow(() -> new ResourceNotFoundException("Invalid song ID!"));
				// song found -- PERSISTENT
				String path = song.getSongPath();

				if (path != null) {
					// path -- File -- byte[]
					return FileUtils.readFileToByteArray(new File(path));
					// OR from DB: return song.getSong();
				} else {
					throw new ApiException("Song not yet assigned!");
				}
	}

	@Override
	public List<Song> findAllSongs() {
		return songDao.findAll();
	}

}
