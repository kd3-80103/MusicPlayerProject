package com.app.controller;

//import static org.springframework.http.MediaType.APPLICATION_OCTET_STREAM;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.app.dao.SongDao;
import com.app.entities.Song;
import com.app.service.SongHandlingService;
import com.app.service.SongService;

@RestController
@RequestMapping("/songs")
public class SongController {

	
	//private SongService songService;
	private SongDao songDao;
	
	
	@Qualifier("song_folder")
	private SongHandlingService songHandlingService;
	
	@Autowired
	public SongController(SongHandlingService songHandlingService, SongDao songDao) {
		System.out.println("inside SongController ctor");
		this.songHandlingService=songHandlingService;
		this.songDao=songDao;
	}

	@GetMapping
	public ResponseEntity<List<Song>> listAllSong() {
		
		return ResponseEntity.ok(songDao.findAll());

	}

	
	/* upload song from client and saving it either on db or in server side folder
	   method = POST, reqparam: multipart file(song data)*/
	@PostMapping(consumes = "multipart/form-data")
	public ResponseEntity<?> uploadSong(@RequestPart("song")Song song, @RequestParam("file") MultipartFile songFile, Long songId)
	throws IOException{
		
		//check same songs are already present or not
		if(songDao.findSongByFileName(songFile.getOriginalFilename()) || songDao.existsSongByTitleEquals(song.getSongTiltle())) {
			return ResponseEntity.badRequest().body("taken");
		}else {
			System.out.println();
			songHandlingService.uploadSong(songId, songFile);
			
			//saving the song data into the db
			song.setSongPath(songFile.getOriginalFilename());
			Song insertedSong = songDao.save(song);
			
			return new ResponseEntity<>(insertedSong, HttpStatus.CREATED);
		}
//		System.out.println("inside upload image: "+ songId);
//		return ResponseEntity.status(HttpStatus.CREATED).body(songHandlingService.uploadSong(songId, songFile));
	}
//	
//	public byte[] getSong() {
//		
//		
//		
//		return new byte[0];
//	}
//	
//	/* serve(download song) of specific song
//	   method = GET*/
//	@GetMapping(value = "/songs/{songId}", produces = 
//		{APPLICATION_OCTET_STREAM})
//		public ResponseEntity<?> serveSong(@PathVariable Long songId) throws IOException {
//		
//		System.out.println("inside downloadSong "+ songId);
//		return ResponseEntity.ok(songHandlingService.downloadSong(songId));
//	}
	
	
	
	
}
